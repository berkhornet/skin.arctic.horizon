<?xml version="1.0" encoding="UTF-8"?>
<includes>
    <include name="View_51_Addons">
        <control type="group">
            <visible>Control.IsVisible(51)</visible>
            <include>Animation_Down</include>
            <include content="Viewtype_Square">
                <param name="id" value="51" />
                <param name="viewtype-label" value="$LOCALIZE[31237]" />
                <left>-80</left>
                <right>-80</right>
                <bottom>view_bottom</bottom>
                <pagecontrol>60</pagecontrol>
                <onfocus>ClearProperty(TMDbHelper.WidgetContainer,Home)</onfocus>
                <include>Viewtype_Movement</include>
                <ondown condition="!Skin.HasSetting(DisableWallScroll) + [Container(51).HasNext | Container(51).HasPrevious]">SetProperty(WallMode,1)</ondown>
                <ondown condition="!Skin.HasSetting(DisableWallScroll) + [Container(51).HasNext | Container(51).HasPrevious]">Container.SetViewMode(5151)</ondown>
                <ondown condition="!Skin.HasSetting(DisableWallScroll) + [Container(51).HasNext | Container(51).HasPrevious]">SetFocus(25151)</ondown>
                <ondown condition="Skin.HasSetting(DisableWallScroll)">60</ondown>
                <visible>$EXP[Exp_View_51]</visible>
            </include>
            <include content="Home_Hub_Widget_Label">
                <param name="id" value="51" />
                <param name="altid" value="510" />
                <param name="label" value="$VAR[Label_Header_Center]" />
                <param name="altlabel" value="$INFO[Control.GetLabel(3),, ]$INFO[Control.GetLabel(4)]" />
            </include>
        </control>
        <control type="group">
            <visible>Control.IsVisible(5151)</visible>
            <include>Animation_Down</include>
            <include content="Viewtype_WallSwitch">
                <param name="id" value="51" />
                <param name="include" value="Viewtype_Square" />
                <param name="viewtype-label" value="$LOCALIZE[31237]" />
            </include>
        </control>
        <include content="Viewtype_WallSwitch_Furniture">
            <param name="id" value="51" />
        </include>
    </include>

    <include name="View_501_AddonsWall">
        <control type="group">
            <visible>Control.IsVisible(501)</visible>
            <include>Animation_Down</include>
            <!-- <include content="Animation_Down_Panel">
                <param name="id" value="501" />
            </include> -->
            <include content="Viewtype_Square">
                <param name="id" value="501" />
                <param name="viewtype-label" value="Square Wall" />
                <param name="control-type" value="panel" />
                <param name="orientation" value="vertical" />
                <param name="height" value="800" />
                <left>-80</left>

                <!-- <width>31360</width>
                <include content="Animation_Wall_Slide">
                    <param name="id" value="501" />
                    <param name="slide" value="300" />
                </include>
                <include content="Animation_Wall_Slide_Return">
                    <param name="id" value="501" />
                    <param name="slide" value="300" />
                    <param name="condition" value="[Container(501).Row(0) + String.IsEmpty(Container(501).ListItemNoWrap(6).Label)] | [Container(501).Row(1) + String.IsEmpty(Container(501).ListItemNoWrap(5).Label)]" />
                </include>
                <include content="Animation_Wall_Slide_Return">
                    <param name="id" value="501" />
                    <param name="slide" value="300" />
                    <param name="condition" value="[Container(501).Row(0) + String.IsEmpty(Container(501).ListItemNoWrap(4).Label)] | [Container(501).Row(1) + String.IsEmpty(Container(501).ListItemNoWrap(3).Label)]" />
                </include>
                <include content="Animation_Wall_Slide_Return">
                    <param name="id" value="501" />
                    <param name="slide" value="300" />
                    <param name="condition" value="[Container(501).Row(0) + String.IsEmpty(Container(501).ListItemNoWrap(2).Label)] | [Container(501).Row(1) + String.IsEmpty(Container(501).ListItemNoWrap(1).Label)]" />
                </include>
                <animation effect="slide" end="-300" condition="!Integer.IsGreater(Container(501).NumItems,6)">Conditional</animation>
                <animation effect="slide" end="-300" condition="!Integer.IsGreater(Container(501).NumItems,4)">Conditional</animation>
                <animation effect="slide" end="-300" condition="!Integer.IsGreater(Container(501).NumItems,2)">Conditional</animation> -->

                <right>-80</right>
                <bottom>-100</bottom>
                <pagecontrol>60</pagecontrol>
                <onfocus>ClearProperty(TMDbHelper.WidgetContainer,Home)</onfocus>
                <include>Viewtype_Movement</include>
                <ondown>60</ondown>
                <onup>SetFocus(9000)</onup>
                <visible>$EXP[Exp_View_501]</visible>
            </include>
            <include content="Home_Hub_Widget_Label">
                <param name="id" value="501" />
                <param name="label" value="$VAR[Label_Header_Center]" />
                <param name="altlabel" value="$INFO[Control.GetLabel(3),, ]$INFO[Control.GetLabel(4)]" />
                <top>0</top>
            </include>
        </control>
    </include>
</includes>

